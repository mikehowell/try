{
  "items": [
    {
      "displayText": "BackgroundColor",
      "kind": "Property",
      "filterText": "BackgroundColor",
      "sortText": "BackgroundColor",
      "insertText": "BackgroundColor",
      "documentation": {
        "value": "Gets or sets the background color of the console.",
        "isTrusted": false
      }
    },
    {
      "displayText": "Beep",
      "kind": "Method",
      "filterText": "Beep",
      "sortText": "Beep",
      "insertText": "Beep",
      "documentation": {
        "value": "Plays the sound of a beep through the console speaker.",
        "isTrusted": false
      }
    },
    {
      "displayText": "BufferHeight",
      "kind": "Property",
      "filterText": "BufferHeight",
      "sortText": "BufferHeight",
      "insertText": "BufferHeight",
      "documentation": {
        "value": "Gets or sets the height of the buffer area.",
        "isTrusted": false
      }
    },
    {
      "displayText": "BufferWidth",
      "kind": "Property",
      "filterText": "BufferWidth",
      "sortText": "BufferWidth",
      "insertText": "BufferWidth",
      "documentation": {
        "value": "Gets or sets the width of the buffer area.",
        "isTrusted": false
      }
    },
    {
      "displayText": "CancelKeyPress",
      "kind": "Event",
      "filterText": "CancelKeyPress",
      "sortText": "CancelKeyPress",
      "insertText": "CancelKeyPress",
      "documentation": {
        "value": "Occurs when the System.ConsoleModifiers.Control  modifier key (Ctrl) and either the System.ConsoleKey.C  console key (C) or the Break key are pressed simultaneously (Ctrl+C or Ctrl+Break).",
        "isTrusted": false
      }
    },
    {
      "displayText": "CapsLock",
      "kind": "Property",
      "filterText": "CapsLock",
      "sortText": "CapsLock",
      "insertText": "CapsLock",
      "documentation": {
        "value": "Gets a value indicating whether the CAPS LOCK keyboard toggle is turned on or turned off.",
        "isTrusted": false
      }
    },
    {
      "displayText": "Clear",
      "kind": "Method",
      "filterText": "Clear",
      "sortText": "Clear",
      "insertText": "Clear",
      "documentation": {
        "value": "Clears the console buffer and corresponding console window of display information.",
        "isTrusted": false
      }
    },
    {
      "displayText": "CursorLeft",
      "kind": "Property",
      "filterText": "CursorLeft",
      "sortText": "CursorLeft",
      "insertText": "CursorLeft",
      "documentation": {
        "value": "Gets or sets the column position of the cursor within the buffer area.",
        "isTrusted": false
      }
    },
    {
      "displayText": "CursorSize",
      "kind": "Property",
      "filterText": "CursorSize",
      "sortText": "CursorSize",
      "insertText": "CursorSize",
      "documentation": {
        "value": "Gets or sets the height of the cursor within a character cell.",
        "isTrusted": false
      }
    },
    {
      "displayText": "CursorTop",
      "kind": "Property",
      "filterText": "CursorTop",
      "sortText": "CursorTop",
      "insertText": "CursorTop",
      "documentation": {
        "value": "Gets or sets the row position of the cursor within the buffer area.",
        "isTrusted": false
      }
    },
    {
      "displayText": "CursorVisible",
      "kind": "Property",
      "filterText": "CursorVisible",
      "sortText": "CursorVisible",
      "insertText": "CursorVisible",
      "documentation": {
        "value": "Gets or sets a value indicating whether the cursor is visible.",
        "isTrusted": false
      }
    },
    {
      "displayText": "Equals",
      "kind": "Method",
      "filterText": "Equals",
      "sortText": "Equals",
      "insertText": "Equals",
      "documentation": {
        "value": "Determines whether the specified object instances are considered equal.",
        "isTrusted": false
      }
    },
    {
      "displayText": "Error",
      "kind": "Property",
      "filterText": "Error",
      "sortText": "Error",
      "insertText": "Error",
      "documentation": {
        "value": "Gets the standard error output stream.",
        "isTrusted": false
      }
    },
    {
      "displayText": "ForegroundColor",
      "kind": "Property",
      "filterText": "ForegroundColor",
      "sortText": "ForegroundColor",
      "insertText": "ForegroundColor",
      "documentation": {
        "value": "Gets or sets the foreground color of the console.",
        "isTrusted": false
      }
    },
    {
      "displayText": "In",
      "kind": "Property",
      "filterText": "In",
      "sortText": "In",
      "insertText": "In",
      "documentation": {
        "value": "Gets the standard input stream.",
        "isTrusted": false
      }
    },
    {
      "displayText": "InputEncoding",
      "kind": "Property",
      "filterText": "InputEncoding",
      "sortText": "InputEncoding",
      "insertText": "InputEncoding",
      "documentation": {
        "value": "Gets or sets the encoding the console uses to read input.",
        "isTrusted": false
      }
    },
    {
      "displayText": "IsErrorRedirected",
      "kind": "Property",
      "filterText": "IsErrorRedirected",
      "sortText": "IsErrorRedirected",
      "insertText": "IsErrorRedirected",
      "documentation": {
        "value": "Gets a value that indicates whether the error output stream has been redirected from the standard error stream.",
        "isTrusted": false
      }
    },
    {
      "displayText": "IsInputRedirected",
      "kind": "Property",
      "filterText": "IsInputRedirected",
      "sortText": "IsInputRedirected",
      "insertText": "IsInputRedirected",
      "documentation": {
        "value": "Gets a value that indicates whether input has been redirected from the standard input stream.",
        "isTrusted": false
      }
    },
    {
      "displayText": "IsOutputRedirected",
      "kind": "Property",
      "filterText": "IsOutputRedirected",
      "sortText": "IsOutputRedirected",
      "insertText": "IsOutputRedirected",
      "documentation": {
        "value": "Gets a value that indicates whether output has been redirected from the standard output stream.",
        "isTrusted": false
      }
    },
    {
      "displayText": "KeyAvailable",
      "kind": "Property",
      "filterText": "KeyAvailable",
      "sortText": "KeyAvailable",
      "insertText": "KeyAvailable",
      "documentation": {
        "value": "Gets a value indicating whether a key press is available in the input stream.",
        "isTrusted": false
      }
    },
    {
      "displayText": "LargestWindowHeight",
      "kind": "Property",
      "filterText": "LargestWindowHeight",
      "sortText": "LargestWindowHeight",
      "insertText": "LargestWindowHeight",
      "documentation": {
        "value": "Gets the largest possible number of console window rows, based on the current font and screen resolution.",
        "isTrusted": false
      }
    },
    {
      "displayText": "LargestWindowWidth",
      "kind": "Property",
      "filterText": "LargestWindowWidth",
      "sortText": "LargestWindowWidth",
      "insertText": "LargestWindowWidth",
      "documentation": {
        "value": "Gets the largest possible number of console window columns, based on the current font and screen resolution.",
        "isTrusted": false
      }
    },
    {
      "displayText": "MoveBufferArea",
      "kind": "Method",
      "filterText": "MoveBufferArea",
      "sortText": "MoveBufferArea",
      "insertText": "MoveBufferArea",
      "documentation": {
        "value": "Copies a specified source area of the screen buffer to a specified destination area.",
        "isTrusted": false
      }
    },
    {
      "displayText": "NumberLock",
      "kind": "Property",
      "filterText": "NumberLock",
      "sortText": "NumberLock",
      "insertText": "NumberLock",
      "documentation": {
        "value": "Gets a value indicating whether the NUM LOCK keyboard toggle is turned on or turned off.",
        "isTrusted": false
      }
    },
    {
      "displayText": "OpenStandardError",
      "kind": "Method",
      "filterText": "OpenStandardError",
      "sortText": "OpenStandardError",
      "insertText": "OpenStandardError",
      "documentation": {
        "value": "Acquires the standard error stream.",
        "isTrusted": false
      }
    },
    {
      "displayText": "OpenStandardInput",
      "kind": "Method",
      "filterText": "OpenStandardInput",
      "sortText": "OpenStandardInput",
      "insertText": "OpenStandardInput",
      "documentation": {
        "value": "Acquires the standard input stream.",
        "isTrusted": false
      }
    },
    {
      "displayText": "OpenStandardOutput",
      "kind": "Method",
      "filterText": "OpenStandardOutput",
      "sortText": "OpenStandardOutput",
      "insertText": "OpenStandardOutput",
      "documentation": {
        "value": "Acquires the standard output stream.",
        "isTrusted": false
      }
    },
    {
      "displayText": "Out",
      "kind": "Property",
      "filterText": "Out",
      "sortText": "Out",
      "insertText": "Out",
      "documentation": {
        "value": "Gets the standard output stream.",
        "isTrusted": false
      }
    },
    {
      "displayText": "OutputEncoding",
      "kind": "Property",
      "filterText": "OutputEncoding",
      "sortText": "OutputEncoding",
      "insertText": "OutputEncoding",
      "documentation": {
        "value": "Gets or sets the encoding the console uses to write output.",
        "isTrusted": false
      }
    },
    {
      "displayText": "Read",
      "kind": "Method",
      "filterText": "Read",
      "sortText": "Read",
      "insertText": "Read",
      "documentation": {
        "value": "Reads the next character from the standard input stream.",
        "isTrusted": false
      }
    },
    {
      "displayText": "ReadKey",
      "kind": "Method",
      "filterText": "ReadKey",
      "sortText": "ReadKey",
      "insertText": "ReadKey",
      "documentation": {
        "value": "Obtains the next character or function key pressed by the user. The pressed key is displayed in the console window.",
        "isTrusted": false
      }
    },
    {
      "displayText": "ReadLine",
      "kind": "Method",
      "filterText": "ReadLine",
      "sortText": "ReadLine",
      "insertText": "ReadLine",
      "documentation": {
        "value": "Reads the next line of characters from the standard input stream.",
        "isTrusted": false
      }
    },
    {
      "displayText": "ReferenceEquals",
      "kind": "Method",
      "filterText": "ReferenceEquals",
      "sortText": "ReferenceEquals",
      "insertText": "ReferenceEquals",
      "documentation": {
        "value": "Determines whether the specified System.Object  instances are the same instance.",
        "isTrusted": false
      }
    },
    {
      "displayText": "ResetColor",
      "kind": "Method",
      "filterText": "ResetColor",
      "sortText": "ResetColor",
      "insertText": "ResetColor",
      "documentation": {
        "value": "Sets the foreground and background console colors to their defaults.",
        "isTrusted": false
      }
    },
    {
      "displayText": "SetBufferSize",
      "kind": "Method",
      "filterText": "SetBufferSize",
      "sortText": "SetBufferSize",
      "insertText": "SetBufferSize",
      "documentation": {
        "value": "Sets the height and width of the screen buffer area to the specified values.",
        "isTrusted": false
      }
    },
    {
      "displayText": "SetCursorPosition",
      "kind": "Method",
      "filterText": "SetCursorPosition",
      "sortText": "SetCursorPosition",
      "insertText": "SetCursorPosition",
      "documentation": {
        "value": "Sets the position of the cursor.",
        "isTrusted": false
      }
    },
    {
      "displayText": "SetError",
      "kind": "Method",
      "filterText": "SetError",
      "sortText": "SetError",
      "insertText": "SetError",
      "documentation": {
        "value": "Sets the System.Console.Error  property to the specified System.IO.TextWriter  object.",
        "isTrusted": false
      }
    },
    {
      "displayText": "SetIn",
      "kind": "Method",
      "filterText": "SetIn",
      "sortText": "SetIn",
      "insertText": "SetIn",
      "documentation": {
        "value": "Sets the System.Console.In  property to the specified System.IO.TextReader  object.",
        "isTrusted": false
      }
    },
    {
      "displayText": "SetOut",
      "kind": "Method",
      "filterText": "SetOut",
      "sortText": "SetOut",
      "insertText": "SetOut",
      "documentation": {
        "value": "Sets the System.Console.Out  property to target the System.IO.TextWriter  object.",
        "isTrusted": false
      }
    },
    {
      "displayText": "SetWindowPosition",
      "kind": "Method",
      "filterText": "SetWindowPosition",
      "sortText": "SetWindowPosition",
      "insertText": "SetWindowPosition",
      "documentation": {
        "value": "Sets the position of the console window relative to the screen buffer.",
        "isTrusted": false
      }
    },
    {
      "displayText": "SetWindowSize",
      "kind": "Method",
      "filterText": "SetWindowSize",
      "sortText": "SetWindowSize",
      "insertText": "SetWindowSize",
      "documentation": {
        "value": "Sets the height and width of the console window to the specified values.",
        "isTrusted": false
      }
    },
    {
      "displayText": "Title",
      "kind": "Property",
      "filterText": "Title",
      "sortText": "Title",
      "insertText": "Title",
      "documentation": {
        "value": "Gets or sets the title to display in the console title bar.",
        "isTrusted": false
      }
    },
    {
      "displayText": "TreatControlCAsInput",
      "kind": "Property",
      "filterText": "TreatControlCAsInput",
      "sortText": "TreatControlCAsInput",
      "insertText": "TreatControlCAsInput",
      "documentation": {
        "value": "Gets or sets a value indicating whether the combination of the System.ConsoleModifiers.Control  modifier key and System.ConsoleKey.C  console key (Ctrl+C) is treated as ordinary input or as an interruption that is handled by the operating system.",
        "isTrusted": false
      }
    },
    {
      "displayText": "WindowHeight",
      "kind": "Property",
      "filterText": "WindowHeight",
      "sortText": "WindowHeight",
      "insertText": "WindowHeight",
      "documentation": {
        "value": "Gets or sets the height of the console window area.",
        "isTrusted": false
      }
    },
    {
      "displayText": "WindowLeft",
      "kind": "Property",
      "filterText": "WindowLeft",
      "sortText": "WindowLeft",
      "insertText": "WindowLeft",
      "documentation": {
        "value": "Gets or sets the leftmost position of the console window area relative to the screen buffer.",
        "isTrusted": false
      }
    },
    {
      "displayText": "WindowTop",
      "kind": "Property",
      "filterText": "WindowTop",
      "sortText": "WindowTop",
      "insertText": "WindowTop",
      "documentation": {
        "value": "Gets or sets the top position of the console window area relative to the screen buffer.",
        "isTrusted": false
      }
    },
    {
      "displayText": "WindowWidth",
      "kind": "Property",
      "filterText": "WindowWidth",
      "sortText": "WindowWidth",
      "insertText": "WindowWidth",
      "documentation": {
        "value": "Gets or sets the width of the console window.",
        "isTrusted": false
      }
    },
    {
      "displayText": "Write",
      "kind": "Method",
      "filterText": "Write",
      "sortText": "Write",
      "insertText": "Write",
      "documentation": {
        "value": "Writes the text representation of the specified Boolean value to the standard output stream.",
        "isTrusted": false
      }
    },
    {
      "displayText": "WriteLine",
      "kind": "Method",
      "filterText": "WriteLine",
      "sortText": "WriteLine",
      "insertText": "WriteLine",
      "documentation": {
        "value": "Writes the current line terminator to the standard output stream.",
        "isTrusted": false
      }
    }
  ],
  "requestId": "TestRun",
  "diagnostics": [
    {
      "start": 194,
      "end": 194,
      "message": "ViewportCode.cs(12,23): error CS1002: ; expected",
      "severity": 3,
      "id": "CS1002",
      "location": "ViewportCode.cs(12,23): error CS1002"
    },
    {
      "start": 192,
      "end": 194,
      "message": "ViewportCode.cs(12,21): error CS0117: 'Console' does not contain a definition for 'Ou'",
      "severity": 3,
      "id": "CS0117",
      "location": "ViewportCode.cs(12,21): error CS0117"
    },
    {
      "start": 136,
      "end": 142,
      "message": "ViewportCode.cs(9,30): error CS0161: 'Sample.Method()': not all code paths return a value",
      "severity": 3,
      "id": "CS0161",
      "location": "ViewportCode.cs(9,30): error CS0161"
    }
  ]
}